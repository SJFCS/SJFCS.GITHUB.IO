{
    "version": "https://jsonfeed.org/version/1",
    "title": "Stay curious, stay naive.",
    "subtitle": null,
    "icon": "https://songjinfeng.gitee.io/images/favicon.ico",
    "description": "Stay curious, stay naive.",
    "home_page_url": "https://SongJinfeng.gitee.io",
    "items": [
        {
            "id": "https://songjinfeng.gitee.io/%E7%BD%91%E7%BB%9C/RS-OSPF/",
            "url": "https://songjinfeng.gitee.io/%E7%BD%91%E7%BB%9C/RS-OSPF/",
            "title": "RS-OSPF",
            "date_published": "2021-02-25T02:45:48.000Z",
            "content_html": "<div class=\"note info\">\n<p>本文重点<br />\n了解 OSPF 协议的特点<br />\n掌握 OSPF 协议分层结构<br />\n掌握 OSPF 协议中的网络类型<br />\n掌握 OSPF 协议的报文封装<br />\n掌握 OSPF 协议状态迁移</p>\n</div>\n<h1 id=\"ospf理论\"><a class=\"anchor\" href=\"#ospf理论\">#</a> OSPF 理论</h1>\n<h2 id=\"rip协议存在的问题\"><a class=\"anchor\" href=\"#rip协议存在的问题\">#</a> RIP 协议存在的问题</h2>\n<p>存在最大 15 跳的限制，不能适应大规模组网的需求<br />\n周期性发送全部路由信息，占用大量的带宽资源<br />\n路由收敛速度慢<br />\n以跳数作为度量值<br />\n存在路由环路可能性</p>\n<h2 id=\"ospf特点\"><a class=\"anchor\" href=\"#ospf特点\">#</a> OSPF 特点</h2>\n<p>没有路由跳数的限制<br />\n使用组播更新变化的路由和网络信息<br />\n路由收敛速度较快<br />\n以开销（Cost）作为度量值<br />\n采用的 SPF 算法可以有效的避免环路<br />\n在互联网上大量使用，是运用最广泛的路由协议</p>\n<h2 id=\"链路状态数据库同步过程-报文类型与封装\"><a class=\"anchor\" href=\"#链路状态数据库同步过程-报文类型与封装\">#</a> 链路状态数据库同步过程  报文类型与封装</h2>\n<p>邻居邻接区别 为什么</p>\n<table>\n<thead>\n<tr>\n<th><strong>OSPF</strong>  <strong>报文类型</strong></th>\n<th><strong>作用</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Hello</td>\n<td>建立并维护邻居关系</td>\n</tr>\n<tr>\n<td>Database  Description（DD）</td>\n<td>数据库内容的汇总（仅包含 LSA 摘要）</td>\n</tr>\n<tr>\n<td>Link  State Request（LSR）</td>\n<td>请求自己没有的或者比自己更新的链路状态详细信息</td>\n</tr>\n<tr>\n<td>Link  State Update（LSU)</td>\n<td>链路状态更新信息</td>\n</tr>\n<tr>\n<td>Link  State Acknowledge（LSAck）</td>\n<td>对 LSU 的确认</td>\n</tr>\n</tbody>\n</table>\n<p>OSPF 报文直接封装在 IP 报文中，协议号为 89。</p>\n<table>\n<thead>\n<tr></tr>\n</thead>\n<tbody>\n<tr>\n<td>链路层帧头</td>\n<td>IP Header</td>\n<td>OSPF Packet</td>\n<td>链路层帧尾</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"划分区域优势\"><a class=\"anchor\" href=\"#划分区域优势\">#</a> 划分区域优势</h2>\n<p>减少了区域内 LSDB 中链路状态信息 (LSA) 的数量，降低了运行 OSPF 协议对路由器性能的要求<br />\n可以将相同功能性或者地理位置的路由器划分在一个区域内，以便于管理。<br />\n隔离拓扑变化，减少路由震荡对整个自治系统的影响。</p>\n<h2 id=\"ospf区域类型\"><a class=\"anchor\" href=\"#ospf区域类型\">#</a> OSPF 区域类型</h2>\n<p class=\"primary\"><strong>1、骨干区域只能有一个 2、非骨干区域都要对接到骨干区域</strong></p>\n<ul class=\"task-list\">\n<li>[1] 区域内路由器（Internal Router）// 所有接口都在同一区域内</li>\n<li>[ ] 区域边界路由器（ABR，Area Border Router）<strong>// 连接骨干区域和非骨干区域</strong></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 骨干路由器（Backbone Router）// 所有接口在骨干区域内<br />\n自治系统边界路由器（ASBR， Autonomous System Border Router ）<strong>// 连接外部自治系统，并引入了外部路由</strong></label></li>\n</ul>\n<h3 id=\"dr-选举规则接口改pri优先级默认1大的优先-router-id大的优先-已选的dr后加入优先级更高不会被替代-reset-ospf-pro-重置重新选举-改完rid要重置才能生效\"><a class=\"anchor\" href=\"#dr-选举规则接口改pri优先级默认1大的优先-router-id大的优先-已选的dr后加入优先级更高不会被替代-reset-ospf-pro-重置重新选举-改完rid要重置才能生效\">#</a> DR 选举规则，接口改 pri 优先级默认 1 大的优先、Router ID 大的优先。已选的 DR，后加入优先级更高不会被替代   reset ospf pro 重置重新选举   改完 rid 要重置才能生效</h3>\n<h2 id=\"router-id\"><a class=\"anchor\" href=\"#router-id\">#</a> Router ID</h2>\n<p><strong>配置全局 Router-ID 对所有协议生效<br />\n协议内指定的 Router-ID 优先级更高</strong><br />\n一台路由器如果要运行 OSPF 协议，则必须存在 Router ID（RID）。<br />\nRID 是一个 32 比特无符号整数，可以在一个自治系统中唯一的标识一台路由器。<br />\nRID 可以手工配置，也可以自动生成。<br />\n如果没有通过命令指定 RID，将按照如下顺序自动生成一个 RID：<br />\n如果存在配置 IP 地址的 Loopback 接口，则选择 Loopback 接口地址中最大的作为 Router ID；<br />\n如果没有配置 IP 地址的 Loopback 接口，则从其他接口的 IP 地址中选择最大的作为 Router ID（不考虑接口的 up/down 状态）。</p>\n<h2 id=\"ospf网络类型\"><a class=\"anchor\" href=\"#ospf网络类型\">#</a> OSPF 网络类型</h2>\n<p><strong>对于不同</strong>二层链路类型<strong>的网段，ospf 会生成不同网络类型<br />\n不同网络类型，DR/BDR 选举，LSA 细节，协议报文发送形式等会有所不同</strong><br />\n Broadcast（广播网络，以太网默认的网络类型）<br />\n组播发送协议报文<br />\n 224.0.0.5 所有运行 OSPF 的接口会监听<br />\n 225.0.0.6 所有 DR/BDR 的接口会监听<br />\n需要选举 DR/BDR<br />\nhello-time 10 秒 每隔 10 秒发一次<br />\n dead-time  40 秒 40 秒没收到就断掉<br />\n NBMA（Non-Broadcast Multi-Access，非广播多点可达网络）</p>\n<p>P2MP（Point-to-MultiPoint，点到多点）<br />\nP2P（Point-to-Point，点到点）</p>\n<h2 id=\"nbma与p2mp\"><a class=\"anchor\" href=\"#nbma与p2mp\">#</a> NBMA 与 P2MP</h2>\n<p>NBMA 网络是指那些全连通的、非广播、多点可达网络。而 P2MP 网络，则并不需要一定是全连通的。<br />\nNBMA 是一种缺省的网络类型，而 P2MP 网络必须是由其它的网络强制更改的。<br />\nNBMA 网络采用单播发送报文，需要手工配置邻居。P2MP 网络采用组播方式发送报文。</p>\n",
            "tags": [
                "网络",
                "教程"
            ]
        },
        {
            "id": "https://songjinfeng.gitee.io/%E7%BD%91%E7%BB%9C/RS-1-smart%20link/",
            "url": "https://songjinfeng.gitee.io/%E7%BD%91%E7%BB%9C/RS-1-smart%20link/",
            "title": "RS-Smart-link",
            "date_published": "2020-08-13T12:45:48.000Z",
            "content_html": "<div class=\"note info\">\n<p>H3C 华为私有</p>\n<p>定义：针对 <code>双上行</code> 组网的解决方案，实现高可靠链路冗余和故障切换</p>\n<p>优势：故障切换厘秒级</p>\n<p>运行机制：双上行端两个口组成一个 Smart-link 组，配置主备端口。故障时自动切换，恢复后仍保持不重新抢占主备，默认不角色抢占和自动回切</p>\n</div>\n<h3 id=\"交换机收到smartlink的flush报文后是如何处理的\"><a class=\"anchor\" href=\"#交换机收到smartlink的flush报文后是如何处理的\">#</a> 交换机收到 SmartLink 的 flush 报文后是如何处理的</h3>\n<p>交换机收到 SmartLink 的 flush 报文后，会对报文中的密码进行检查，若与端口下配置的控制 VLAN 以及密码相同，则清除设备上的 MAC 表项，否则将 flush 报文丢弃。</p>\n<p>如果接口下配置了<strong> smart-link flush receive</strong> 命令，且该命令中的控制 VLAN 与接收 flush 报文中的控制 VLAN 相同，则清除该接口下的 MAC 表项。</p>\n",
            "tags": [
                "网络",
                "教程"
            ]
        },
        {
            "id": "https://songjinfeng.gitee.io/%E7%BD%91%E7%BB%9C/RS-Vlan/",
            "url": "https://songjinfeng.gitee.io/%E7%BD%91%E7%BB%9C/RS-Vlan/",
            "title": "RS-VLAN",
            "date_published": "2020-08-13T12:45:48.000Z",
            "content_html": "<h1 id=\"vlan理论\"><a class=\"anchor\" href=\"#vlan理论\">#</a> VLAN 理论</h1>\n<div class=\"tab\" data-id=\"id1\" data-title=\"## VLAN内部转发流程\">\n<h2 id=\"vlan内部转发流程\"><a class=\"anchor\" href=\"#vlan内部转发流程\">#</a> VLAN 内部转发流程</h2>\n<p>D:\\hexo\\source_posts\\assets\\<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zamZjcy5naXRodWIuaW8vYXNzZXRzLyQlN0JmaWxlbmFtZSU3RA==\">https://sjfcs.github.io/assets/${filename}</span><br />\n<img data-src=\"/assets/RS-Vlan/image-20210224094838419.png\" alt=\"image-20210224094838419\" /></p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"## VLAN内部转发流程\">\n<h2 id=\"vlan跨交换机处理流程\"><a class=\"anchor\" href=\"#vlan跨交换机处理流程\">#</a> VLAN 跨交换机处理流程</h2>\n<p><img data-src=\"/assets/RS-Vlan/image-20210224095053353.png\" alt=\"image-20210224095053353\" /></p>\n<p>&lt;img src=&quot;/assets/RS-Vlan/image-20210224095116777.png&quot; alt=&quot;image-20210224095116777&quot; style=&quot;zoom: 80%;&quot; /&gt;</p>\n</div>\n<h1 id=\"vlan命令\"><a class=\"anchor\" href=\"#vlan命令\">#</a> VLAN 命令</h1>\n<h1 id=\"vlan实验\"><a class=\"anchor\" href=\"#vlan实验\">#</a> VLAN 实验</h1>\n",
            "tags": [
                "网络",
                "教程"
            ]
        }
    ]
}